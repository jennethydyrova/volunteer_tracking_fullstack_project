{"ast":null,"code":"import { FETCH_VOLUNTEERS, FETCH_VOLUNTEERS_SUCCESS, FETCH_VOLUNTEERS_FAILURE, POST_VOLUNTEERS_SUCCESS, POST_VOLUNTEERS_FAILURE, EDIT_VOLUNTEER_INFO, EDIT_VOLUNTEER_INFO_SUCCESS, EDIT_VOLUNTEER_INFO_FAILURE, DELETE_VOLUNTEER, DELETE_VOLUNTEER_SUCCESS, DELETE_VOLUNTEER_FAILURE } from \"../actions\";\nconst defaultStateList = {\n  isFetching: false,\n  volunteers: [],\n  error: {}\n};\n\nconst volunteerList = (state = defaultStateList, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case FETCH_VOLUNTEERS:\n      return { ...state,\n        isFetching: true\n      };\n\n    case FETCH_VOLUNTEERS_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        volunteers: action.data\n      };\n\n    case FETCH_VOLUNTEERS_FAILURE:\n      return { ...state,\n        isFetching: false,\n        error: action.data\n      };\n\n    case POST_VOLUNTEERS_SUCCESS:\n      return { ...state,\n        volunteers: [...state.volunteers, {\n          name: action.payload.name,\n          languagesSpoken: action.payload.languagesSpoken,\n          occupation: action.payload.occupation,\n          skills: action.payload.skills,\n          role: action.payload.role\n        }]\n      };\n\n    case POST_VOLUNTEERS_FAILURE:\n      return { ...state,\n        error: action.data\n      };\n\n    case EDIT_VOLUNTEER_INFO_SUCCESS:\n      const replaceVolunteer = state.volunteers.findIndex(el => el.id === state.payload.id);\n      const newState = { ...state\n      };\n      newState.volunteers[replaceVolunteer] = {\n        name: action.payload.name,\n        languagesSpoken: action.payload.languagesSpoken,\n        occupation: action.payload.occupation,\n        skills: action.payload.skills,\n        role: action.payload.role\n      };\n      return { ...newState\n      };\n\n    case DELETE_VOLUNTEER:\n      return { ...state,\n        isFetching: true\n      };\n\n    case DELETE_VOLUNTEER_SUCCESS:\n      const volunteer = state.volunteers.filter(volunteer => volunteer.id !== action.payload.id);\n      return { ...state,\n        volunteers: volunteer\n      };\n\n    case DELETE_VOLUNTEER_FAILURE:\n      return { ...state,\n        isFetching: false,\n        error: action.data\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default volunteerList;","map":{"version":3,"sources":["/Users/dzennetahydyrova/typescript-express/client/src/reducers/index.jsx"],"names":["FETCH_VOLUNTEERS","FETCH_VOLUNTEERS_SUCCESS","FETCH_VOLUNTEERS_FAILURE","POST_VOLUNTEERS_SUCCESS","POST_VOLUNTEERS_FAILURE","EDIT_VOLUNTEER_INFO","EDIT_VOLUNTEER_INFO_SUCCESS","EDIT_VOLUNTEER_INFO_FAILURE","DELETE_VOLUNTEER","DELETE_VOLUNTEER_SUCCESS","DELETE_VOLUNTEER_FAILURE","defaultStateList","isFetching","volunteers","error","volunteerList","state","action","console","log","type","data","name","payload","languagesSpoken","occupation","skills","role","replaceVolunteer","findIndex","el","id","newState","volunteer","filter"],"mappings":"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","sourcesContent":["import {\n  FETCH_VOLUNTEERS,\n  FETCH_VOLUNTEERS_SUCCESS,\n  FETCH_VOLUNTEERS_FAILURE,\n  POST_VOLUNTEERS_SUCCESS,\n  POST_VOLUNTEERS_FAILURE,\n  EDIT_VOLUNTEER_INFO,\n  EDIT_VOLUNTEER_INFO_SUCCESS,\n  EDIT_VOLUNTEER_INFO_FAILURE,\n  DELETE_VOLUNTEER,\n  DELETE_VOLUNTEER_SUCCESS,\n  DELETE_VOLUNTEER_FAILURE,\n} from \"../actions\";\n\nconst defaultStateList = {\n  isFetching: false,\n  volunteers: [],\n  error: {},\n};\n\nconst volunteerList = (state = defaultStateList, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case FETCH_VOLUNTEERS:\n      return { ...state, isFetching: true };\n    case FETCH_VOLUNTEERS_SUCCESS:\n      return { ...state, isFetching: false, volunteers: action.data };\n    case FETCH_VOLUNTEERS_FAILURE:\n      return { ...state, isFetching: false, error: action.data };\n    case POST_VOLUNTEERS_SUCCESS:\n      return {\n        ...state,\n        volunteers: [\n          ...state.volunteers,\n          {\n            name: action.payload.name,\n            languagesSpoken: action.payload.languagesSpoken,\n            occupation: action.payload.occupation,\n            skills: action.payload.skills,\n            role: action.payload.role,\n          },\n        ],\n      };\n    case POST_VOLUNTEERS_FAILURE:\n      return { ...state, error: action.data };\n    case EDIT_VOLUNTEER_INFO_SUCCESS:\n      const replaceVolunteer = state.volunteers.findIndex(\n        (el) => el.id === state.payload.id\n      );\n\n      const newState = { ...state };\n      newState.volunteers[replaceVolunteer] = {\n        name: action.payload.name,\n        languagesSpoken: action.payload.languagesSpoken,\n        occupation: action.payload.occupation,\n        skills: action.payload.skills,\n        role: action.payload.role,\n      };\n      return {\n        ...newState,\n      };\n    case DELETE_VOLUNTEER:\n      return { ...state, isFetching: true };\n    case DELETE_VOLUNTEER_SUCCESS:\n      const volunteer = state.volunteers.filter(\n        (volunteer) => volunteer.id !== action.payload.id\n      );\n      return { ...state, volunteers: volunteer };\n    case DELETE_VOLUNTEER_FAILURE:\n      return { ...state, isFetching: false, error: action.data };\n    default:\n      return state;\n  }\n};\n\nexport default volunteerList;\n"]},"metadata":{},"sourceType":"module"}