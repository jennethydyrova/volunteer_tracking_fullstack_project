{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dzennetahydyrova/typescript-express/client/src/components/VolunteerTable/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Table, Container } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport VolunteerInfo from \"../VolunteerInfo\";\nimport { connect } from \"react-redux\";\nimport { fetchVolunteers, fetchVolunteersSuccess, fetchVolunteersFail, fetchVolunteerList } from \"../../actions/index\";\n\nconst VolunteerTable = ({\n  fetchVolunteers,\n  fetchVolunteersSuccess,\n  fetchVolunteersFail,\n  fetchVolunteerList\n}) => {\n  _s();\n\n  const [volunteerInfo, setVolunteerInfo] = React.useState(); //   fetchVolunteerList();\n  // console.log(fetchVolunteerList);\n  //   const volunteersInfo = () => {\n  //     axios.get(`http://localhost:3001/volunteers`).then((res) => {\n  //       const persons = res.data;\n  //       setVolunteerInfo(persons);\n  //     });\n  //   };\n\n  React.useEffect(() => {\n    fetchVolunteerList();\n  }, []); //   const handleEdit = (e, volunteer) => {\n  //     e.preventDefault();\n  //     axios\n  //       .patch(`http://localhost:3001/volunteers/${volunteer.id}`, {\n  //         name: volunteer.name,\n  //         languagesSpoken: volunteer.languagesSpoken,\n  //         occupation: volunteer.occupation,\n  //         skills: volunteer.skills,\n  //         role: volunteer.role,\n  //       })\n  //       .then(function (response) {\n  //         console.log(response);\n  //       })\n  //       .catch(function (error) {\n  //         console.log(error);\n  //       });\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Occupation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: volunteerInfo && volunteerInfo.map(volunteer => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(VolunteerInfo, {\n              volunteer: volunteer // handleEdit={handleEdit}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VolunteerTable, \"P1o3+nMfrHcmH7DoU8lwlXoprcw=\");\n\n_c = VolunteerTable;\n\nconst mapStateToProps = state => {\n  return {\n    isFetching: state.value,\n    volunteers: state.volunteers,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  // You call dispatch with the \"action creator.\"\n  return {\n    // dispatch({ type: 'INCREMENT' }),\n    fetchVolunteers: () => dispatch(fetchVolunteerList()) //   decrementCounter: () => dispatch(decrement()),\n    //   changeUserNameValue: (newValue) => dispatch(changeUserName(newValue)),\n    //   addNewSub: (newSub) => dispatch(addNewSub(newSub))\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VolunteerTable);\n\nvar _c;\n\n$RefreshReg$(_c, \"VolunteerTable\");","map":{"version":3,"sources":["/Users/dzennetahydyrova/typescript-express/client/src/components/VolunteerTable/index.jsx"],"names":["React","Table","Container","axios","VolunteerInfo","connect","fetchVolunteers","fetchVolunteersSuccess","fetchVolunteersFail","fetchVolunteerList","VolunteerTable","volunteerInfo","setVolunteerInfo","useState","useEffect","map","volunteer","mapStateToProps","state","isFetching","value","volunteers","error","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,iBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,eADF,EAEEC,sBAFF,EAGEC,mBAHF,EAIEC,kBAJF,QAKO,qBALP;;AAOA,MAAMC,cAAc,GAAG,CAAC;AACtBJ,EAAAA,eADsB;AAEtBC,EAAAA,sBAFsB;AAGtBC,EAAAA,mBAHsB;AAItBC,EAAAA;AAJsB,CAAD,KAKjB;AAAA;;AACJ,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCZ,KAAK,CAACa,QAAN,EAA1C,CADI,CAEJ;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAb,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpBL,IAAAA,kBAAkB;AACnB,GAFD,EAEG,EAFH,EAZI,CAgBJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,kBACGE,aAAa,IACZA,aAAa,CAACI,GAAd,CAAmBC,SAAD,IAAe;AAC/B,8BACE;AAAA,mCACE,QAAC,aAAD;AACE,cAAA,SAAS,EAAEA,SADb,CAEE;;AAFF;AAAA;AAAA;AAAA;AAAA;AADF,2BADF;AAQD,SATD;AAFJ;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CApED;;GAAMN,c;;KAAAA,c;;AAsEN,MAAMO,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,UAAU,EAAED,KAAK,CAACE,KADb;AAELC,IAAAA,UAAU,EAAEH,KAAK,CAACG,UAFb;AAGLC,IAAAA,KAAK,EAAEJ,KAAK,CAACI;AAHR,GAAP;AAKD,CAND;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC;AACA,SAAO;AACL;AACAlB,IAAAA,eAAe,EAAE,MAAMkB,QAAQ,CAACf,kBAAkB,EAAnB,CAF1B,CAGL;AACA;AACA;;AALK,GAAP;AAOD,CATD;;AAWA,eAAeJ,OAAO,CAACY,eAAD,EAAkBM,kBAAlB,CAAP,CAA6Cb,cAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { Table, Container } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport VolunteerInfo from \"../VolunteerInfo\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchVolunteers,\n  fetchVolunteersSuccess,\n  fetchVolunteersFail,\n  fetchVolunteerList,\n} from \"../../actions/index\";\n\nconst VolunteerTable = ({\n  fetchVolunteers,\n  fetchVolunteersSuccess,\n  fetchVolunteersFail,\n  fetchVolunteerList,\n}) => {\n  const [volunteerInfo, setVolunteerInfo] = React.useState();\n  //   fetchVolunteerList();\n  // console.log(fetchVolunteerList);\n\n  //   const volunteersInfo = () => {\n  //     axios.get(`http://localhost:3001/volunteers`).then((res) => {\n  //       const persons = res.data;\n  //       setVolunteerInfo(persons);\n  //     });\n  //   };\n\n  React.useEffect(() => {\n    fetchVolunteerList();\n  }, []);\n\n  //   const handleEdit = (e, volunteer) => {\n  //     e.preventDefault();\n  //     axios\n  //       .patch(`http://localhost:3001/volunteers/${volunteer.id}`, {\n  //         name: volunteer.name,\n  //         languagesSpoken: volunteer.languagesSpoken,\n  //         occupation: volunteer.occupation,\n  //         skills: volunteer.skills,\n  //         role: volunteer.role,\n  //       })\n  //       .then(function (response) {\n  //         console.log(response);\n  //       })\n  //       .catch(function (error) {\n  //         console.log(error);\n  //       });\n  //   };\n\n  return (\n    <Container>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Language</th>\n            <th>Occupation</th>\n            <th>Skills</th>\n            <th>Role</th>\n          </tr>\n        </thead>\n        <tbody>\n          {volunteerInfo &&\n            volunteerInfo.map((volunteer) => {\n              return (\n                <>\n                  <VolunteerInfo\n                    volunteer={volunteer}\n                    // handleEdit={handleEdit}\n                  />\n                </>\n              );\n            })}\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isFetching: state.value,\n    volunteers: state.volunteers,\n    error: state.error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  // You call dispatch with the \"action creator.\"\n  return {\n    // dispatch({ type: 'INCREMENT' }),\n    fetchVolunteers: () => dispatch(fetchVolunteerList()),\n    //   decrementCounter: () => dispatch(decrement()),\n    //   changeUserNameValue: (newValue) => dispatch(changeUserName(newValue)),\n    //   addNewSub: (newSub) => dispatch(addNewSub(newSub))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VolunteerTable);\n"]},"metadata":{},"sourceType":"module"}