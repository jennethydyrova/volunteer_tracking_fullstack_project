{"ast":null,"code":"import { FETCH_VOLUNTEERS, FETCH_VOLUNTEERS_SUCCESS, FETCH_VOLUNTEERS_FAILURE, POST_VOLUNTEERS_SUCCESS, POST_VOLUNTEERS_FAILURE, EDIT_VOLUNTEER_INFO, EDIT_VOLUNTEER_INFO_SUCCESS, EDIT_VOLUNTEER_INFO_FAILURE, DELETE_VOLUNTEER, DELETE_VOLUNTEER_SUCCESS, DELETE_VOLUNTEER_FAILURE } from \"../actions\";\nconst defaultStateList = {\n  isFetching: false,\n  volunteers: [],\n  error: {}\n};\n\nconst volunteerList = (state = defaultStateList, action) => {\n  console.log(action);\n  console.log(state.payload.id);\n\n  switch (action.type) {\n    case FETCH_VOLUNTEERS:\n      return { ...state,\n        isFetching: true\n      };\n\n    case FETCH_VOLUNTEERS_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        volunteers: action.data\n      };\n\n    case FETCH_VOLUNTEERS_FAILURE:\n      return { ...state,\n        isFetching: false,\n        error: action.data\n      };\n\n    case POST_VOLUNTEERS_SUCCESS:\n      return { ...state,\n        volunteers: [...state.volunteers, {\n          name: action.payload.name,\n          languagesSpoken: action.payload.languagesSpoken,\n          occupation: action.payload.occupation,\n          skills: action.payload.skills,\n          role: action.payload.role\n        }]\n      };\n\n    case POST_VOLUNTEERS_FAILURE:\n      return { ...state,\n        error: action.data\n      };\n\n    case EDIT_VOLUNTEER_INFO_SUCCESS:\n      const replaceVolunteer = state.volunteers.findIndex(el => el.id === state.payload.id);\n      const newState = { ...state\n      };\n      newState.volunteers[replaceVolunteer] = {\n        name: action.payload.name,\n        languagesSpoken: action.payload.languagesSpoken,\n        occupation: action.payload.occupation,\n        skills: action.payload.skills,\n        role: action.payload.role\n      };\n      return { ...newState\n      };\n\n    case DELETE_VOLUNTEER:\n      const singleVolunteer = state.volunteers.filter(volunteer => volunteer.id !== action.id);\n      console.log(singleVolunteer);\n      return { ...state,\n        volunteers: singleVolunteer\n      };\n\n    case DELETE_VOLUNTEER_FAILURE:\n      return { ...state,\n        isFetching: false,\n        error: action.data\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default volunteerList;","map":{"version":3,"sources":["/Users/dzennetahydyrova/typescript-express/client/src/reducers/index.jsx"],"names":["FETCH_VOLUNTEERS","FETCH_VOLUNTEERS_SUCCESS","FETCH_VOLUNTEERS_FAILURE","POST_VOLUNTEERS_SUCCESS","POST_VOLUNTEERS_FAILURE","EDIT_VOLUNTEER_INFO","EDIT_VOLUNTEER_INFO_SUCCESS","EDIT_VOLUNTEER_INFO_FAILURE","DELETE_VOLUNTEER","DELETE_VOLUNTEER_SUCCESS","DELETE_VOLUNTEER_FAILURE","defaultStateList","isFetching","volunteers","error","volunteerList","state","action","console","log","payload","id","type","data","name","languagesSpoken","occupation","skills","role","replaceVolunteer","findIndex","el","newState","singleVolunteer","filter","volunteer"],"mappings":"AAAA,SACEA,gBADF,EAEEC,wBAFF,EAGEC,wBAHF,EAIEC,uBAJF,EAKEC,uBALF,EAMEC,mBANF,EAOEC,2BAPF,EAQEC,2BARF,EASEC,gBATF,EAUEC,wBAVF,EAWEC,wBAXF,QAYO,YAZP;AAcA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,UAAU,EAAE,KADW;AAEvBC,EAAAA,UAAU,EAAE,EAFW;AAGvBC,EAAAA,KAAK,EAAE;AAHgB,CAAzB;;AAMA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGL,gBAAT,EAA2BM,MAA3B,KAAsC;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,OAAN,CAAcC,EAA1B;;AACA,UAAQJ,MAAM,CAACK,IAAf;AACE,SAAKtB,gBAAL;AACE,aAAO,EAAE,GAAGgB,KAAL;AAAYJ,QAAAA,UAAU,EAAE;AAAxB,OAAP;;AACF,SAAKX,wBAAL;AACE,aAAO,EAAE,GAAGe,KAAL;AAAYJ,QAAAA,UAAU,EAAE,KAAxB;AAA+BC,QAAAA,UAAU,EAAEI,MAAM,CAACM;AAAlD,OAAP;;AACF,SAAKrB,wBAAL;AACE,aAAO,EAAE,GAAGc,KAAL;AAAYJ,QAAAA,UAAU,EAAE,KAAxB;AAA+BE,QAAAA,KAAK,EAAEG,MAAM,CAACM;AAA7C,OAAP;;AACF,SAAKpB,uBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELH,QAAAA,UAAU,EAAE,CACV,GAAGG,KAAK,CAACH,UADC,EAEV;AACEW,UAAAA,IAAI,EAAEP,MAAM,CAACG,OAAP,CAAeI,IADvB;AAEEC,UAAAA,eAAe,EAAER,MAAM,CAACG,OAAP,CAAeK,eAFlC;AAGEC,UAAAA,UAAU,EAAET,MAAM,CAACG,OAAP,CAAeM,UAH7B;AAIEC,UAAAA,MAAM,EAAEV,MAAM,CAACG,OAAP,CAAeO,MAJzB;AAKEC,UAAAA,IAAI,EAAEX,MAAM,CAACG,OAAP,CAAeQ;AALvB,SAFU;AAFP,OAAP;;AAaF,SAAKxB,uBAAL;AACE,aAAO,EAAE,GAAGY,KAAL;AAAYF,QAAAA,KAAK,EAAEG,MAAM,CAACM;AAA1B,OAAP;;AACF,SAAKjB,2BAAL;AACE,YAAMuB,gBAAgB,GAAGb,KAAK,CAACH,UAAN,CAAiBiB,SAAjB,CACtBC,EAAD,IAAQA,EAAE,CAACV,EAAH,KAAUL,KAAK,CAACI,OAAN,CAAcC,EADT,CAAzB;AAGA,YAAMW,QAAQ,GAAG,EAAE,GAAGhB;AAAL,OAAjB;AACAgB,MAAAA,QAAQ,CAACnB,UAAT,CAAoBgB,gBAApB,IAAwC;AACtCL,QAAAA,IAAI,EAAEP,MAAM,CAACG,OAAP,CAAeI,IADiB;AAEtCC,QAAAA,eAAe,EAAER,MAAM,CAACG,OAAP,CAAeK,eAFM;AAGtCC,QAAAA,UAAU,EAAET,MAAM,CAACG,OAAP,CAAeM,UAHW;AAItCC,QAAAA,MAAM,EAAEV,MAAM,CAACG,OAAP,CAAeO,MAJe;AAKtCC,QAAAA,IAAI,EAAEX,MAAM,CAACG,OAAP,CAAeQ;AALiB,OAAxC;AAOA,aAAO,EACL,GAAGI;AADE,OAAP;;AAGF,SAAKxB,gBAAL;AACE,YAAMyB,eAAe,GAAGjB,KAAK,CAACH,UAAN,CAAiBqB,MAAjB,CACrBC,SAAD,IAAeA,SAAS,CAACd,EAAV,KAAiBJ,MAAM,CAACI,EADjB,CAAxB;AAGAH,MAAAA,OAAO,CAACC,GAAR,CAAYc,eAAZ;AACA,aAAO,EAAE,GAAGjB,KAAL;AAAYH,QAAAA,UAAU,EAAEoB;AAAxB,OAAP;;AACF,SAAKvB,wBAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYJ,QAAAA,UAAU,EAAE,KAAxB;AAA+BE,QAAAA,KAAK,EAAEG,MAAM,CAACM;AAA7C,OAAP;;AACF;AACE,aAAOP,KAAP;AA/CJ;AAiDD,CApDD;;AAsDA,eAAeD,aAAf","sourcesContent":["import {\n  FETCH_VOLUNTEERS,\n  FETCH_VOLUNTEERS_SUCCESS,\n  FETCH_VOLUNTEERS_FAILURE,\n  POST_VOLUNTEERS_SUCCESS,\n  POST_VOLUNTEERS_FAILURE,\n  EDIT_VOLUNTEER_INFO,\n  EDIT_VOLUNTEER_INFO_SUCCESS,\n  EDIT_VOLUNTEER_INFO_FAILURE,\n  DELETE_VOLUNTEER,\n  DELETE_VOLUNTEER_SUCCESS,\n  DELETE_VOLUNTEER_FAILURE,\n} from \"../actions\";\n\nconst defaultStateList = {\n  isFetching: false,\n  volunteers: [],\n  error: {},\n};\n\nconst volunteerList = (state = defaultStateList, action) => {\n  console.log(action);\n  console.log(state.payload.id);\n  switch (action.type) {\n    case FETCH_VOLUNTEERS:\n      return { ...state, isFetching: true };\n    case FETCH_VOLUNTEERS_SUCCESS:\n      return { ...state, isFetching: false, volunteers: action.data };\n    case FETCH_VOLUNTEERS_FAILURE:\n      return { ...state, isFetching: false, error: action.data };\n    case POST_VOLUNTEERS_SUCCESS:\n      return {\n        ...state,\n        volunteers: [\n          ...state.volunteers,\n          {\n            name: action.payload.name,\n            languagesSpoken: action.payload.languagesSpoken,\n            occupation: action.payload.occupation,\n            skills: action.payload.skills,\n            role: action.payload.role,\n          },\n        ],\n      };\n    case POST_VOLUNTEERS_FAILURE:\n      return { ...state, error: action.data };\n    case EDIT_VOLUNTEER_INFO_SUCCESS:\n      const replaceVolunteer = state.volunteers.findIndex(\n        (el) => el.id === state.payload.id\n      );\n      const newState = { ...state };\n      newState.volunteers[replaceVolunteer] = {\n        name: action.payload.name,\n        languagesSpoken: action.payload.languagesSpoken,\n        occupation: action.payload.occupation,\n        skills: action.payload.skills,\n        role: action.payload.role,\n      };\n      return {\n        ...newState,\n      };\n    case DELETE_VOLUNTEER:\n      const singleVolunteer = state.volunteers.filter(\n        (volunteer) => volunteer.id !== action.id\n      );\n      console.log(singleVolunteer);\n      return { ...state, volunteers: singleVolunteer };\n    case DELETE_VOLUNTEER_FAILURE:\n      return { ...state, isFetching: false, error: action.data };\n    default:\n      return state;\n  }\n};\n\nexport default volunteerList;\n"]},"metadata":{},"sourceType":"module"}