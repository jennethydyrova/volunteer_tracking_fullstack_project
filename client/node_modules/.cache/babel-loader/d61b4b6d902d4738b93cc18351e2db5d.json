{"ast":null,"code":"import { FETCH_VOLUNTEERS, FETCH_VOLUNTEERS_SUCCESS, FETCH_VOLUNTEERS_FAILURE, POST_VOLUNTEERS_SUCCESS, POST_VOLUNTEERS_FAILURE, EDIT_VOLUNTEER_INFO, EDIT_VOLUNTEER_INFO_SUCCESS, EDIT_VOLUNTEER_INFO_FAILURE, DELETE_VOLUNTEER, DELETE_VOLUNTEER_SUCCESS, DELETE_VOLUNTEER_FAILURE, FETCH_PROJECTS, FETCH_PROJECTS_SUCCESS, FETCH_PROJECTS_FAILURE, POST_PROJECTS_SUCCESS, POST_PROJECTS_FAILURE } from \"../actions\";\nconst defaultStateList = {\n  isFetching: false,\n  volunteers: [],\n  error: {},\n  projects: []\n};\n\nconst volunteerList = (state = defaultStateList, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case FETCH_VOLUNTEERS:\n      return { ...state,\n        isFetching: true\n      };\n\n    case FETCH_VOLUNTEERS_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        volunteers: action.data\n      };\n\n    case FETCH_VOLUNTEERS_FAILURE:\n      return { ...state,\n        isFetching: false,\n        error: action.data\n      };\n\n    case POST_VOLUNTEERS_SUCCESS:\n      return { ...state,\n        volunteers: [...state.volunteers, {\n          name: action.payload.name,\n          languagesSpoken: action.payload.languagesSpoken,\n          occupation: action.payload.occupation,\n          skills: action.payload.skills,\n          role: action.payload.role\n        }]\n      };\n\n    case POST_VOLUNTEERS_FAILURE:\n      return { ...state,\n        error: action.data\n      };\n\n    case EDIT_VOLUNTEER_INFO_SUCCESS:\n      const replaceVolunteer = state.volunteers.findIndex(el => el.id === action.payload.id);\n      const newState = { ...state\n      };\n      newState.volunteers[replaceVolunteer] = {\n        name: action.payload.name,\n        languagesSpoken: action.payload.languagesSpoken,\n        occupation: action.payload.occupation,\n        skills: action.payload.skills,\n        role: action.payload.role,\n        id: action.payload.id\n      };\n      return { ...newState\n      };\n\n    case DELETE_VOLUNTEER:\n      const singleVolunteer = state.volunteers.filter(volunteer => volunteer.id !== action.id);\n      console.log(singleVolunteer);\n      return { ...state,\n        volunteers: singleVolunteer\n      };\n\n    case DELETE_VOLUNTEER_FAILURE:\n      return { ...state,\n        isFetching: false,\n        error: action.data\n      };\n\n    case FETCH_PROJECTS:\n      return { ...state,\n        isFetching: true\n      };\n\n    case FETCH_PROJECTS_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        projects: action.data\n      };\n\n    case FETCH_PROJECTS_FAILURE:\n      return { ...state,\n        isFetching: false,\n        error: action.data\n      };\n\n    case POST_PROJECTS_SUCCESS:\n      return { ...state,\n        projects: [...state.projects, {\n          name: action.payload.name,\n          days: action.payload.days,\n          time: action.payload.time,\n          location: action.payload.location\n        }]\n      };\n\n    case POST_PROJECTS_FAILURE:\n      return { ...state,\n        error: action.data\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default volunteerList;","map":{"version":3,"sources":["/Users/dzennetahydyrova/typescript-express/client/src/reducers/index.jsx"],"names":["FETCH_VOLUNTEERS","FETCH_VOLUNTEERS_SUCCESS","FETCH_VOLUNTEERS_FAILURE","POST_VOLUNTEERS_SUCCESS","POST_VOLUNTEERS_FAILURE","EDIT_VOLUNTEER_INFO","EDIT_VOLUNTEER_INFO_SUCCESS","EDIT_VOLUNTEER_INFO_FAILURE","DELETE_VOLUNTEER","DELETE_VOLUNTEER_SUCCESS","DELETE_VOLUNTEER_FAILURE","FETCH_PROJECTS","FETCH_PROJECTS_SUCCESS","FETCH_PROJECTS_FAILURE","POST_PROJECTS_SUCCESS","POST_PROJECTS_FAILURE","defaultStateList","isFetching","volunteers","error","projects","volunteerList","state","action","console","log","type","data","name","payload","languagesSpoken","occupation","skills","role","replaceVolunteer","findIndex","el","id","newState","singleVolunteer","filter","volunteer","days","time","location"],"mappings":"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","sourcesContent":["import {\n  FETCH_VOLUNTEERS,\n  FETCH_VOLUNTEERS_SUCCESS,\n  FETCH_VOLUNTEERS_FAILURE,\n  POST_VOLUNTEERS_SUCCESS,\n  POST_VOLUNTEERS_FAILURE,\n  EDIT_VOLUNTEER_INFO,\n  EDIT_VOLUNTEER_INFO_SUCCESS,\n  EDIT_VOLUNTEER_INFO_FAILURE,\n  DELETE_VOLUNTEER,\n  DELETE_VOLUNTEER_SUCCESS,\n  DELETE_VOLUNTEER_FAILURE,\n  FETCH_PROJECTS,\n  FETCH_PROJECTS_SUCCESS,\n  FETCH_PROJECTS_FAILURE,\n  POST_PROJECTS_SUCCESS,\n  POST_PROJECTS_FAILURE,\n} from \"../actions\";\n\nconst defaultStateList = {\n  isFetching: false,\n  volunteers: [],\n  error: {},\n  projects: [],\n};\n\nconst volunteerList = (state = defaultStateList, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case FETCH_VOLUNTEERS:\n      return { ...state, isFetching: true };\n    case FETCH_VOLUNTEERS_SUCCESS:\n      return { ...state, isFetching: false, volunteers: action.data };\n    case FETCH_VOLUNTEERS_FAILURE:\n      return { ...state, isFetching: false, error: action.data };\n    case POST_VOLUNTEERS_SUCCESS:\n      return {\n        ...state,\n        volunteers: [\n          ...state.volunteers,\n          {\n            name: action.payload.name,\n            languagesSpoken: action.payload.languagesSpoken,\n            occupation: action.payload.occupation,\n            skills: action.payload.skills,\n            role: action.payload.role,\n          },\n        ],\n      };\n    case POST_VOLUNTEERS_FAILURE:\n      return { ...state, error: action.data };\n    case EDIT_VOLUNTEER_INFO_SUCCESS:\n      const replaceVolunteer = state.volunteers.findIndex(\n        (el) => el.id === action.payload.id\n      );\n      const newState = { ...state };\n      newState.volunteers[replaceVolunteer] = {\n        name: action.payload.name,\n        languagesSpoken: action.payload.languagesSpoken,\n        occupation: action.payload.occupation,\n        skills: action.payload.skills,\n        role: action.payload.role,\n        id: action.payload.id,\n      };\n      return {\n        ...newState,\n      };\n    case DELETE_VOLUNTEER:\n      const singleVolunteer = state.volunteers.filter(\n        (volunteer) => volunteer.id !== action.id\n      );\n      console.log(singleVolunteer);\n      return { ...state, volunteers: singleVolunteer };\n    case DELETE_VOLUNTEER_FAILURE:\n      return { ...state, isFetching: false, error: action.data };\n    case FETCH_PROJECTS:\n      return { ...state, isFetching: true };\n    case FETCH_PROJECTS_SUCCESS:\n      return { ...state, isFetching: false, projects: action.data };\n    case FETCH_PROJECTS_FAILURE:\n      return { ...state, isFetching: false, error: action.data };\n    case POST_PROJECTS_SUCCESS:\n      return {\n        ...state,\n        projects: [\n          ...state.projects,\n          {\n            name: action.payload.name,\n            days: action.payload.days,\n            time: action.payload.time,\n            location: action.payload.location,\n          },\n        ],\n      };\n    case POST_PROJECTS_FAILURE:\n      return { ...state, error: action.data };\n    default:\n      return state;\n  }\n};\n\nexport default volunteerList;\n"]},"metadata":{},"sourceType":"module"}